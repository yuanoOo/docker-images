name: test obbinlog-ce x86_64

on:
  push:
    branches:
      - 'test-*'
  pull_request:
    paths:
      - '.github/workflows/*obbinlog-ce*.yml'
      - 'obbinlog-ce/**'

concurrency:
  group: test-obbinlog-ce-x86-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test-obbinlog-ce-x86:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build obbinlog-ce for x86_64
        uses: docker/build-push-action@v6
        with:
          context: ./obbinlog-ce
          platforms: linux/amd64
          file: ./obbinlog-ce/Dockerfile
          push: false
          load: true
          tags: obbinlog-ce:test-x86_64
          build-args: |
            TARGETPLATFORM=linux/amd64

      - name: Start obbinlog-ce container
        run: |
          echo "Starting obbinlog-ce container..."
          docker run -d \
            --name obbinlog-ce-test \
            -p 2881:2881 \
            -p 2883:2883 \
            -e CLUSTER_NAME=test \
            -e TENANT_NAME=test \
            -e PASSWORD=123456 \
            obbinlog-ce:test-x86_64
          
          echo "Waiting for container to start..."
          sleep 30
          
          echo "Checking container status..."
          docker ps
          docker logs obbinlog-ce-test

      - name: Install MySQL client
        run: |
          echo "Installing MySQL client..."
          sudo apt-get update
          sudo apt-get install -y mysql-client

      - name: Test database connection
        run: |
          echo "Testing database connection..."
          
          # Wait for database to be ready
          echo "Waiting for database to be ready..."
          for i in {1..60}; do
            if mysql -h127.0.0.1 -P2881 -uroot -e "SELECT 1;" 2>/dev/null; then
              echo "Database is ready!"
              break
            fi
            echo "Waiting... ($i/60)"
            sleep 10
          done
          
          # Test sys tenant connection
          echo "Testing sys tenant connection..."
          mysql -h127.0.0.1 -P2881 -uroot -e "SHOW DATABASES;"
          
          # Test test tenant connection
          echo "Testing test tenant connection..."
          mysql -h127.0.0.1 -P2881 -uroot@test -e "SHOW DATABASES;"
          
          # Test basic SQL operations
          echo "Testing basic SQL operations..."
          mysql -h127.0.0.1 -P2881 -uroot@test -e "
            CREATE DATABASE IF NOT EXISTS test_db;
            USE test_db;
            CREATE TABLE IF NOT EXISTS test_table (id INT, name VARCHAR(50));
            INSERT INTO test_table VALUES (1, 'test_value');
            SELECT * FROM test_table;
            DROP TABLE test_table;
            DROP DATABASE test_db;
          "

      - name: Check container logs
        if: always()
        run: |
          echo "Container logs:"
          docker logs obbinlog-ce-test

      - name: Cleanup
        if: always()
        run: |
          echo "Cleaning up..."
          docker stop obbinlog-ce-test || true
          docker rm obbinlog-ce-test || true
          docker rmi obbinlog-ce:test-x86_64 || true
          docker system prune -f || true
          echo "Cleanup completed" 